{"ast":null,"code":"export const BASE_URL = \"https://api.movies.kostyarad.nomoredomains.xyz\";\n// export const BASE_URL = \"http://localhost:3000\";\n\nfunction getResponseData(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Где-то ошибочка:( : ${res.status}`);\n}\nexport function register(name, email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  }).then(res => getResponseData(res));\n}\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => getResponseData(res)).then(data => {\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n      return data.jwt;\n    }\n  });\n};\nexport function getContent(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`\n    }\n  }).then(res => getResponseData(res)).then(data => data);\n}\nexport function editUserInfo(name, email) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n    },\n    credentials: this._credentials,\n    body: JSON.stringify({\n      name: name,\n      email: email\n    })\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\nexport function saveMovie(movie) {\n  return fetch(`${BASE_URL}/movies`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n    },\n    body: JSON.stringify({\n      country: movie.country,\n      director: movie.director,\n      duration: movie.duration,\n      year: movie.year,\n      description: movie.description,\n      image: `https://api.nomoreparties.co${movie.image.url}`,\n      trailer: movie.trailerLink,\n      nameRU: movie.nameRU,\n      nameEN: movie.nameEN,\n      thumbnail: `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`,\n      movieId: movie.id,\n      tra\n    })\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\nexport function deleteMovie(movieId) {\n  return fetch(`${BASE_URL}/movies/${movieId}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\nexport function getUserInfo() {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}","map":{"version":3,"names":["BASE_URL","getResponseData","res","ok","json","Promise","reject","status","register","name","email","password","fetch","credentials","method","headers","body","JSON","stringify","then","login","data","jwt","localStorage","setItem","getContent","Authorization","editUserInfo","getItem","_credentials","response","saveMovie","movie","country","director","duration","year","description","image","url","trailer","trailerLink","nameRU","nameEN","thumbnail","formats","movieId","id","tra","deleteMovie","getUserInfo"],"sources":["/Users/konstantinradcenko/dev/movies-explorer-full/frontend/src/utils/MainApi.js"],"sourcesContent":["export const BASE_URL = \"https://api.movies.kostyarad.nomoredomains.xyz\";\n// export const BASE_URL = \"http://localhost:3000\";\n\nfunction getResponseData(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Где-то ошибочка:( : ${res.status}`);\n}\n\nexport function register(name, email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ name, email, password }),\n  }).then((res) => getResponseData(res));\n}\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((res) => getResponseData(res))\n    .then((data) => {\n      if (data.jwt) {\n        localStorage.setItem(\"jwt\", data.jwt);\n        return data.jwt;\n      }\n    });\n};\n\nexport function getContent(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n    },\n  })\n    .then((res) => getResponseData(res))\n    .then((data) => data);\n}\n\nexport function editUserInfo(name, email) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n    credentials: this._credentials,\n    body: JSON.stringify({\n      name: name,\n      email: email,\n    }),\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\n\nexport function saveMovie(movie) {\n  return fetch(`${BASE_URL}/movies`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n    body: JSON.stringify({\n      country: movie.country,\n      director: movie.director,\n      duration: movie.duration,\n      year: movie.year,\n      description: movie.description,\n      image: `https://api.nomoreparties.co${movie.image.url}`,\n      trailer: movie.trailerLink,\n      nameRU: movie.nameRU,\n      nameEN: movie.nameEN,\n      thumbnail: `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`,\n      movieId: movie.id,\n      tra\n    }),\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\n\nexport function deleteMovie(movieId) {\n  return fetch(`${BASE_URL}/movies/${movieId}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\n\nexport function getUserInfo() {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Где-то ошибочка:( : ${response.status}`);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}