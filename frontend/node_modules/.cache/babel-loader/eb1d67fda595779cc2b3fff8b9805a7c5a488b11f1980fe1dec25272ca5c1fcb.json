{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nexport default function useValidateForm() {\n  _s();\n  const [inputValues, setInputValues] = React.useState({});\n  const [isFormValid, setIsFormValid] = React.useState(false);\n  const [inputErrors, setInputErrors] = React.useState({});\n  const handleInputChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    if (name === \"email\") {\n      const validateEmailRegex = /^\\S+@\\S+\\.\\S+$/;\n      const validEmail = validateEmailRegex.test(value);\n      if (!validEmail) {\n        setInputErrors({\n          ...inputErrors,\n          emailError: \"Email не валиден\"\n        });\n      }\n      console.log(validEmail);\n      console.log(inputErrors);\n    }\n    setInputValues({\n      ...inputValues,\n      [name]: value\n    });\n    setIsFormValid(evt.target.closest('form').checkValidity());\n    setInputErrors({\n      ...inputErrors,\n      [name]: evt.target.validationMessage\n    });\n  };\n  return {\n    inputValues,\n    inputErrors,\n    isFormValid,\n    setInputValues,\n    handleInputChange,\n    setIsFormValid\n  };\n}\n_s(useValidateForm, \"I8I79sN0BiZ6/nxqrfOftVnBBEQ=\");\n;","map":{"version":3,"names":["React","useValidateForm","_s","inputValues","setInputValues","useState","isFormValid","setIsFormValid","inputErrors","setInputErrors","handleInputChange","evt","name","value","target","validateEmailRegex","validEmail","test","emailError","console","log","closest","checkValidity","validationMessage"],"sources":["/Users/konstantinradcenko/dev/movies-explorer-full/frontend/src/hooks/useValidateForm.jsx"],"sourcesContent":["import React from 'react';\n\nexport default function useValidateForm() {\n\n  const [inputValues, setInputValues] = React.useState({});\n  const [isFormValid, setIsFormValid] = React.useState(false);\n  const [inputErrors, setInputErrors] = React.useState({});\n\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.target;\n    if (name === \"email\") {\n      const validateEmailRegex = /^\\S+@\\S+\\.\\S+$/;\n      const validEmail = validateEmailRegex.test(value);\n      if (!validEmail) {\n        setInputErrors({ ...inputErrors, emailError: \"Email не валиден\" });\n      }\n      console.log(validEmail)\n      console.log(inputErrors)\n    }\n\n    setInputValues({ ...inputValues, [name]: value });\n    setIsFormValid(evt.target.closest('form').checkValidity());\n    setInputErrors({ ...inputErrors, [name]: evt.target.validationMessage });\n  };\n\n  return { inputValues, inputErrors, isFormValid, setInputValues, handleInputChange, setIsFormValid };\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAExC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,KAAK,CAACK,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGT,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EAGxD,MAAMK,iBAAiB,GAAGC,GAAG,IAAI;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,GAAG,CAACG,MAAM;IAClC,IAAIF,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMG,kBAAkB,GAAG,gBAAgB;MAC3C,MAAMC,UAAU,GAAGD,kBAAkB,CAACE,IAAI,CAACJ,KAAK,CAAC;MACjD,IAAI,CAACG,UAAU,EAAE;QACfP,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEU,UAAU,EAAE;QAAmB,CAAC,CAAC;MACpE;MACAC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;MACvBG,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;IAC1B;IAEAJ,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACS,IAAI,GAAGC;IAAM,CAAC,CAAC;IACjDN,cAAc,CAACI,GAAG,CAACG,MAAM,CAACO,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC;IAC1Db,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACI,IAAI,GAAGD,GAAG,CAACG,MAAM,CAACS;IAAkB,CAAC,CAAC;EAC1E,CAAC;EAED,OAAO;IAAEpB,WAAW;IAAEK,WAAW;IAAEF,WAAW;IAAEF,cAAc;IAAEM,iBAAiB;IAAEH;EAAe,CAAC;AACrG;AAACL,EAAA,CAzBuBD,eAAe;AAyBtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}